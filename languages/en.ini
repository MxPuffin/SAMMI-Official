[language]
code="en"
dropdown="English"
[CommandsList]
dev="Developer Special"
numTextVar="Numbers, Text & Variables"
utilities="Utilities"
extension="Extension Commands"
files="File Management"
twitch="Twitch Commands"
integrations="Integrations"
youtube="YouTube Commands"
obs="OBS Commands"
name="Commands"
[aboutWindow]
founders="Former Team Members:"
developedFromLB="Developed from the LioranBoard source code"
supportPatreon="Support SAMMI On Patreon!"
perksPatreon="Supporters get their name here & access to pre-release builds!"
thanksPatreon="Thanks to our supporters on Patreon:"
policy="Privacy Policy"
license="License Information"
developers="DEVELOPERS:"
team="Current Team:"
[Scopes]
videos="Manage Videos"
games="Read Games"
chatColor="Manage Chat Color"
editors="Read Editors"
blockedTerms="Manage Blocked Terms"
general="General Permissions (Required)"
shoutouts="Manage Shoutouts"
ads="Manage Ads & Commercials"
polls="Manage Polls"
moderators="Manage Moderators"
hypeTrain="Read Hype Train"
chatMessages="Manage Chat Messages"
email="Read Email"
blockedUsers="Manage Blocked Users"
charity="Read Charity"
streamSchedule="Manage Stream Schedule"
announcements="Manage Announcements"
predictions="Manage Predictions"
moderatedChannels="Read Moderated Channels"
chatSettings="Manage Chat Settings"
follows="Read Follows"
missingScopes="Account {accountName} is missing scopes {scopes}to use this feature."
broadcast="Manage Broadcast"
chatters="Read Chatters"
whispers="Manage Whispers"
autoMod="Manage AutoMod"
bits="Read Bits"
raids="Manage Raids"
streamKey="Read Stream Key"
extensions="Manage Extensions"
followers="Read Followers"
channelPointRewards="Manage Channel Point Rewards"
goals="Read Creator Goals"
bannedUsers="Manage Banned Users"
shieldMode="Manage Shield Mode"
subscriptions="Read Subscriptions"
guestStar="Manage Guest Star"
[VariableViewer]
copy="Copy"
copyJson="Copy JSON"
nullUndefined="Null / Undefined"
helpButtonText="Help"
contentHidden="Content is hidden"
object="Object"
search="Search"
copyVariableValue="Copy variable value"
realNumber="Real / Number"
array="Array"
longString="This string is excessively long. Rendering it may render SAMMI very slow or non-functionnal.\rAttempt to Render anyway?"
sortVariablesAlpha="Sort Alphabetically"
copyVariablePath="Copy variable path"
string="String"
nameCopied="Variable name has been copied to clipboard."
sortVariablesType="Sort by Type"
boolean="Boolean (true / false)"
name="Variables"
deleteVariable="Delete variable"
valueCopied="Variable value has been copied to clipboard."
pathCopied="Variable path has been copied to clipboard."
[deckRightClick]
unlockedDeck="Deck has been unlocked."
pwDeck="Please enter the key to unlock this deck from being encrypted."
checkDeck="Check Deck"
[SAMMISettings]
language="Language:"
password="Password:"
ApiServerSettingsTitle="SAMMI Local API Settings"
restartAfterCrash="Auto restart SAMMI after crash"
alertLogExplainer="Creates a logfile for all alerts shown\ninside SAMMI in your SAMMI root folder.\nPlease make sure to keep an eye on the\nsize of the logfile to prevent SAMMI\nfrom getting slow."
fpsNumber="FPS that SAMMI is running at.\nThis should be the same as your stream FPS."
optOutAnalytics="Opt out of Analytics and Data Collection"
minimizeTray="Minimize to Tray"
generalSettings="General Settings:"
developerEnabled="Developer mode has been enabled."
protectionModeExplainer="Does not allow File Delete and Buffer: Save commands\nto modify or delete SAMMI system files\nor any files outside of SAMMI folder."
checkNewUpdates="Automatically check for new updates"
alertLog="Enable alert logging"
optOutAnalyticsHelper="To enhance user experience, SAMMI collects\nnon-identifiable, anonymous, analytical data for analysis.\nThis helps us improve our services and gain a better understanding\non how to further improve your SAMMI experience.\nPlease review our SAMMI Core Privacy Policy on sammi.solutions website."
windowAutoSizePosition="Remember window size and position"
deckAppConnectionSettingsTitle="Deck App Connection Settings"
fps="FPS"
updates="Check for Updates"
protectionModeAlert="By unchecking this setting, you will allow SAMMI to modify and delete any file on your computer. This is a dangerous setting to enable. Continue?"
port="Port"
checkWrap="Automatically close variable wrapping"
verifyDecks="Verify Decks Data"
reset="Reset SAMMI"
openAPIServer="Open Local API Server"
resetPopup="Will close every currently active button,\nreload all decks and clear all variables.\nThis is only a soft reset, It will not\ndelete any decks or files."
DBSettingsTitle="SAMMI Bridge Connection Settings"
downloadLanguages="Download Languages"
protectionMode="Enable enhanced protection mode"
name="SAMMI Settings"
developerDisabled="Developer mode has been disabled."
openAPIServerExplainer="Open server to allow local webhooks and API requests.\nConsult API reference found at SAMMI website."
interfaceScale="Interface Scale"
[CommandsAlerts]
OBSRequestTemplateWS5="Take into account that this template only works with OBSws5 (default in OBS28)"
okBye="Ok bye."
readOutsideBuffer="Attempting to read outside buffer (offset + size = {offsetSize}, buffer size = {bufferSize})"
insertsNotAllowed="Inserts (/$ $/) are not allowed in yellow boxes. Yellow boxes are Value boxes - you can type a variable name directly, no need for insert."
commercialStarted="Ad started successfully."
discordFailed="Sending the discord message was not successful, please check your webhook URL.\nButton: {buttonID}, command: {commandName}, line: {commandLine}"
enhancedSecurityOutsideFolder="SAMMI cannot modify or delete SAMMI system file {fileName} if Enhanced protection mode in Settings is enabled."
variableDoesntExistsOnSet="You're trying to set a variable in a button that has never been triggered before, does not exist, or is not persistent."
varNamesSpacesTwo="Variable names can't have spaces in them, returning 0."
bufferExists="Buffer {bufferName} already exists. Button {buttonID}, command {commandName} (#{commandPos})"
negativeRoots2="Can't get the square root of a negative number."
wrongOBSType="The request you have is for OBSws4, however this instance of OBS is OBSws5"
fileNoExists="File: {fileName} does not exist"
clientAlreadyConnected="Client {name} is already connected."
noFilter="No filter specified"
volumeZeroOne="Change Volume Command expects the volume value to be between 0 and 1."
fileEmpty="The file doesn't exist or contains no text."
VIPAdded="The user {userName} was added as a VIP for this channel."
blockedSuccess="Blocked user [{user}] successfully"
buttonNotExists="Button {buttonID} does not exist"
OBSRequestErrorArrayNotDefined="OBS Request Error: Nested array {arrayName} is not defined."
triggerTypeNotNumeric="Trigger type must be a number"
varNamesSpaces="Variable names can't have spaces in them [{varName}], returning undefined."
objectInvalid2="Invalid object [{objectName}]."
invalidUser="The user you have entered is invalid"
mixItUpError="Mix It Up Error [{status}]. {error} "
OBSRequestError="OBS Request Error"
deckNotFound="Deck Not Found"
bufferReadWriteError="Buffer Error: {error}, in button {buttonID}, command {commandName} (#{commandPos})"
getVariableError="Trying to get a variable from a button [{buttonID}] that is not persistent or does not exist in button {buttonID}, command {commandName} (#{commandPos})"
invalidChannelName="Channel name {channelName} is invalid or not linked in SAMMI."
AutoModLevelChanged="AutoMod Level was changed to level {level}"
objectNotFound="Object not found."
missingKeyName="Missing Key "Name""
noSource="No source specified"
poorlyFormattedArray="Poorly formatted variable array."
userNotFound="The user you have entered was not found."
maximumMesageLengthExceeded="Error: The maximum message length is {length}."
settingsIniProtected="The settings.ini file can't be edited"
notValidRequest="Not a valid request: {request}"
setVariableError="Trying to set a variable in non existent button."
arrayCreationFail="Can't create an array back to back in button {buttonID}, command {commandName} (#{commandPos})."
noMatchingOBSConnection="No matching OBS Connection found."
VIPRemoved="The user {userName} was removed as a VIP for this channel."
unblockedSuccess="Unblocked user [{user}] successfully"
buttonNotPersistent="Button {buttonID} is not persistent"
OBSRequestErrorObjectNotDefined="OBS Request Error: Nested object {objectName} is not defined."
jsonWrong="JSON string is wrong in button {buttonID}, command {commandName} (#{commandPos})"
bufferNotExists="Buffer {bufferName} doesn't exist. In button {buttonID}, command {commandName} (#{commandPos})"
missingBracket="Missing an opening bracket in the array {arrayName}"
ModAdded="The user {userName} was added as a moderator for this channel."
noDeckAppConnected="No Deck App is connected."
commandFailed="Command failed, button {buttonID} Command #{commandNumber}"
OBSRequestErrorObjectNotFound="OBS Request Error: Object {objectName} not found in the response."
imageNotFound="Image Not Found"
arrayInvalid="Invalid array [{arrayName}] in button {buttonID}, command {commandName} (#{commandPos})"
stringWrongEval="String evaluation is wrong."
invalidUsername="The user {username} you have entered is invalid."
commandLineError="Command Line Command Error: {error}"
objectIncorrectFormat="Object incorrectly formatted."
authFailed="Authentication failed."
noBreakOutsideRepeat="You cannot use a break statement outside of Repeat/Re-enable command. Button {buttonID}, command {commandName} (#{commandPos})."
udpFailed="Failed to send UDP message, buffer does not exist."
APIerror="API response error: {error}"
gameNotFound="The category {game} was not found, button: {buttonID}, command: {commandName}, line: {commandLine}"
enhancedSecurityInsideFolder="SAMMI cannot modify or delete files inside the {folderName} directory if Enhanced protection mode in Settings is enabled."
variableDoesntExistsOnGet="You're trying to get a variable from a button that has never been triggered before, does not exist, or is not persistent."
wrongEval="{operation} wrong eval expectation."
buttonName="[button {buttonName}]"
arrayIntoArray="Array inside arrays aren't currently supported."
negativeRoots="Can't get the square root of a negative number. Button {buttonID}, command {commandName} (#{commandPos})"
colorChanged="The color for the user {userName} was changed to {color}"
instanceIdNotExists="Button {buttonID} is not persistent and provided button instance ID {instanceID} doesn't exist."
missingKeyRQ="Missing Key "rq""
jsonWrongShort="JSON string is wrong."
deletedFile="Deleted File: {fileName}"
incorrectInFormat="Incorrect Input Format in button {buttonID}, command {commandName} (#{commandPos})"
ModRemoved="The user {userName} was removed as a moderator for this channel."
invalidOperation="Invalid operation!"
commandNamePos=" Button {buttonID}, command {commandName} (#{commandPos})"
OBSRequestErrorArrayNotFound="OBS Request Error: Array {arrayName} not found in the response."
noSuchSumOrImage="No such sum or image file"
arrayInvalid2="Invalid array [{arrayName}]."
objectInvalid="Invalid object [{objectName}] in button {buttonID}, command {commandName} (#{commandPos})"
deprecatedWarning="The command has been deprecated. Please use the new command."
bridgeNotConnectedExtensionError="{extension command}: Extension is not installed or Bridge is not connected."
[Twitch]
noGameId="Failed to get game ID. Twitch status was not changed."
predictionBroadcasterFail="Cannot create a new Twitch Prediction. No broadcaster was found."
eventsubConnectionTimedout="Eventsub Connection Timed Out. Reconnecting..."
oneOutcome="Array {arrayName} needs to contain at least 2 outcomes to create Twitch Prediction."
notValidGame="{gameName} is not a valid game, Twitch status was not changed."
subCountFailed="Failed to get Twitch Sub Count information."
tokenObtained="Obtained Twitch Token Info for account {accountName}"
chatDisconnected="Twitch Chat got disconnected. Will attempt to reconnect in 5 seconds."
wrongLoginSupplied="{command} failed, button {buttonID}, Command #{commandNumber}. Wrong Login Name supplied."
clipFailed="Failed to create Twitch clip."
markerFailed="Failed to create a Twitch Marker."
eventsubUsingDefaultVersions="Warning: Unable to retrieve current Eventsub subscription versions. Using defaults."
pollFailedToEnd="Failed to end Twitch Poll or Prediction."
redeemFailed="Failed to change Twitch Reward Redemption Status."
twitchInfoEmptyWithoutCommand="Command returned empty, button {buttonID} Command #{commandNumber}"
channelPointsNotFound="The user {username} does not have any channel points. Button {buttonID}, command #{commandNumber}."
clipCreated="New Twitch clip was successfully created."
eventsubError="Eventsub Error[{httpstatus}]: {errorMessage}"
channelPointsCreateFailed="Failed to create Twitch Channel Points Reward."
channelPointsGetFailedYours="Failed to get your Twitch Channel Points Rewards list."
noDefaultAccount="Failed to locate a default account to join Twitch chat."
subStatusFailed="Failed to get Twitch Subscription status information."
subsGifted="{userName} gifted {count} subs to the community."
changeStatusFailed="Failed to change Twitch stream status. No account is linked."
commandFailedAPIResponse="Command failed, API response error: {error}, button {buttonID} Command #{commandNumber}"
eventsubConnectFailed="Failed to connect to Twitch EventSub. Please try to relink your Twitch account and try again."
chatConnectionFailed="Failed to connect to Twitch Chat. [Authentication Failed] Please try renewing your token in Twitch Connections settings."
eventsubRevoked="Revoked Eventsub subscription for {userId}"
chatConnected="Connected to Twitch chat as {userName}"
accountExpired="Main Twitch chat account has expired, cannot connect to chat. Please renew it in Twitch Connections."
twitchInfoEmpty="{command} returned empty, button {buttonID} Command #{commandNumber}"
tokenFailed="Something went wrong retrieving Twitch Token Info."
channelPointsEditFailed="Failed to edit Twitch Channel Points Reward"
chatConnectFailed="Failed to connect to Twitch Chat, will attempt to reconnect in 10 seconds."
accountNotFound="Account {loginName} not found."
tokenReceivedFetching="Received Twitch Token, fetching token info!"
tokenFailedError="Failed to get Twitch Token Info. Error: {error}"
eventsubConnectRefresh="Twitch Eventsub: Refreshing connection. No action required."
pollFailedToCreate="Cannot create a new Twitch Poll. No such broadcaster was found."
channelPointsGetFailed="Failed to get the whole Twitch Channel Points Rewards list."
twitchInfoFailed="{command} failed, button {buttonID} Command #{commandNumber}"
[buttonSettingsMenu]
pressType="Press Type"
overlapInfo="Allow the same button to\nhappen at the same time."
noGroupID="You cannot assign a group ID when Allow Button Overlap option is enabled."
pressInfo="Drag Press allows you to\nactivate a button by\npressing next to it and\nsliding across.\n\n*Normal Press is also\nsupported with Drag Press."
deckList="Deck List"
queueOverlap="Allow Queue and Allow Button Overlap cannot be enabled together (Actions are conflicting.)"
groupId="Group ID"
duplicatedID="Button ID already exists."
multiDragPress="Multi\nDrag\nPress"
noGlobal="Button cannot be named "
varPersist="Local Variable Persist"
queueInfo="If the button is already\nrunning, it will be put\nin a queue and be performed\nonce it is done."
singleDragPress="Single\nDrag\nPress"
allowQueue="Allow Queue"
varPersistInfo="Local variables don't\nreset once the button ends.\n\n*If this is enabled together with\nAllow Overlap, all instances\nwill share the same variables."
name="Button Settings"
allowOverlap="Allow Button Overlap"
noEmptyID="Button ID can't be empty."
buttonId="Button ID"
normalPress="Normal\nPress"
[ButtonEdit]
blockMove="Moved the whole block."
runButton="Button executed"
redo="Redo"
cantMove="Cannot move there."
commandCopied="Command was copied."
saveAndClose="Save and Close"
undo="Undo"
commandsCopied="Commands were copied."
check="Check All"
runButtonDisabledDeck="Trying to run a button from a disabled deck."
copySelected="Copy Selected"
saveWithoutExit="Save"
commandsPasted="Command(s) were pasted."
buttonProtected="This button is protected by its creator. Cannot copy commands inside this button."
delete="Delete selected"
releaseCommands="Release Commands will\nonly happen on button release.\nThis is only available for hotkeys and Deck App buttons."
boxEmpty="The {boxName} box cannot be empty, command {commandName}, at line {commandLine}."
variableWindow="Open Variable Window"
executeButton="Run"
quitSaving="Quit without saving changes?\rThis cannot be undone."
documentation="Open\nDocumentation"
commandDeleted="Command was deleted."
duplicateCase="Duplicate Case Statement found at command {command}. Duplicate cases are not allowed."
buttonSaved="Button has been saved"
tooManyStatements="Too many statements."
outsideCase="Commands outside of the Case Statement inside Switch Statements are not allowed."
uncheck="Uncheck All"
[aboutTags]
tag15="Please send a screenshot of your commands"
tag28="Steve? STEVE! STEEEEEVE! oh wait... that's Alan. ALAN! ALAN!!"
tag11="If (true) {toggle} else {toggle}"
tag24="Don't take photos of your screen!"
tag7="My dog stepped on a bee"
tag20="HELP!"
tag3="I can't believe it's not butter"
tag16="Wibbly Wobbly Timey Wimey"
tag29="To unlock the secret menu just press ALT+F4"
tag12="I love butter flies"
tag25="Well, that never happened in any of the simulations"
tag8="BAN SILVERLINK!"
tag21="I'm like a fart in the wind"
tag4="Hello mum!"
tag17="I shot him... IN THE LEG!"
tag30="Bowties are cool!"
tag13="Elven Ring"
tag26="Look busy, Christinna's watching"
tag9="My App is crashing, what shall I do?"
tag22="We told you so!"
tag5=" A mega pint?"
tag18="Thought you could outwit an onion?"
tag1="Totally didn't borrow this from Minecraft"
tag14="bbbbbbbbbobh bgbobd"
tag27="the cake is a lie"
tag10="Have you tried turning it off and on again"
tag23="Coming soon to Mixer!"
tag6="In the middle of my backswing?"
tag19="We don't make mistakes - We just have happy accidents"
tag2="Yep... Christinna broke it again"
[OBS]
password="Password"
failedConnectPw="Failed to connect to OBS, wrong password. Please check they match in SAMMI and OBS."
failedConnectAutoVariable="Failed to connect to {obsName} OBS, will attempt to reconnect in {count} seconds."
defaults="Defaults:"
obsInstance="OBS Instance"
OBSPwWrong="OBS {OBSName} password is incorrect."
OBSConnected="OBS {OBSName} Connected."
wsFailed="Failed to connect to the websocket."
notConnected="Not connected to this OBS,"
uniqueName="Your OBS connection name must be unique."
lostConnectionReconnect="Lost connection from {OBSName} OBS, attempting to reconnect in 5 seconds."
awaitingConnection="Already waiting for an OBS connection."
noInstanceFound="No OBS Instance with the name {OBSName} found. Please configure it in OBS Connections menu."
connect="Connect"
autoDetect="Auto Detect"
protocol="Protocol"
nonBlockingNotExpected="Somehow, non-blocking connection for OBS was not expected."
port="Port"
autoConnect="Auto Connect"
alreadyConnected="OBS {OBSName} is already connected"
failedConnect="Could not connect to {obsName} OBS."
failedConnectAuto="Failed to connect to {obsName} OBS, will attempt to reconnect in 10 seconds."
wrongWsKey="Wrong WS key returned, disconnecting."
lostConnection="Lost connection from {OBSName} OBS."
wrongWsHandshake="WS: what is this in the initial handshake? {error}"
disconnect="Disconnect"
generalInfo="Here you can set up your SAMMI to OBS Connections. We recommend that you select OBSws5 for OBS28 and up because that is the version included in OBS28.\n\nPorts in this window must match the OBS Websocket Ports.\nPlease leave the default values untouched unless absolutely necessary."
emptyName="Your OBS connection name cannot be empty."
name="Name"
SAMMIPort="You have set up some ports to connect to SAMMI. This is supposed to connect to OBS, not SAMMI. Default OBSws port is 4444."
nonBlocking="Non-Blocking"
[Bridge]
couldNotLoadExtensionFile="Failed to load the extension file. This might be due to missing permissions. Please try moving the file to a different location and installing it again."
installedExtensions="Installed Extensions"
isOutdated="SAMMI only supports Bridge files. Go to Settings - Check for Updates to update your outdated Transmitter to Bridge."
noExtension="No extension is installed in the selected Bridge."
unsupportedConnection="Transmitter tried to connect. Transmitter is not supported in SAMMI. Please update to Bridge and try again."
bridgeConnectedNeeded="This extension requires the Bridge to be connected.\nInstallation canceled."
noLineFeeds="Could not locate line feeds. Check your Bridge file is using LF."
selectNewOne="Current Bridge\r{BridgePath}\r\rDo you want to select a new one?"
isCorrupted="Your Bridge file seems to be corrupted. Please download a new version."
requiresExtension="This extension requires the extension {extensionName} to already be installed."
OBSWSVersionNeeded="This extension requires OBS [Main] to be connected with OBSws version {OBSVersion} or up.\nInstallation Canceled."
missingExtensionName="The extension name is empty."
wrongVersion="This extension requires SAMMI version {SAMMIversion} or higher to work.\nInstallation canceled."
reloadFailed="Bridge could not be reloaded as there was no active connection detected. Please open it first."
missing="The Bridge is missing."
connected="SAMMI Bridge Connected."
missingSection="There is a missing section in the extension: {SectionName}"
extensionsInstalledSuccess="All selected extensions have been successfully installed."
notFound="No Bridge found."
copiedToClipboard="Bridge path was copied to clipboard"
newSelected="New Bridge has been selected: {BridgePath}"
forceInstallFolder="Warning! All your extension decks and Bridge extension code will be replaced if you press Yes. \r\r Do you wish to force install all extensions from the folder? This will: \r\r1. Replace the extensions inside your Bridge and override their decks. \r2. Ignore all extension requirements, such as minimum required SAMMI or OBS version. \r\rPress NO to manually decide for each and skip extensions you don't meet requirements for."
pingFailed="SAMMI could not ping Bridge as there's no active connection detected. Please open it first."
extensionInstalled="Extension {extensionName} Installed successfully."
disconnected="SAMMI Bridge Disconnected."
versionNotBridge="SAMMI Bridge version is not 7.XX. Transmitter does not work with SAMMI Core. Please update.\n\nCancelling Installation."
alreadyInstalled="Extension {extensionName} is already installed.\rReinstall it?"
emptyExtension="Are you trying to install an empty extension?"
reinstallFailed="Failed to re-install all extensions. Your Bridge is missing."
failedToInstallExtension="Failed to install the selected extension."
selectFileToInstallWholeFolder="Select an extension file to install all extension files in the folder."
modifiedTwo="Something went wrong trying to retrieve installed extensions. Bridge might have been manually modified."
reinstallMissingExtension="No extension was installed in the current Bridge. There is no extension to reinstall."
wrongVersionCancelled="This extension requires the {SAMMIversion} extension to be installed to work.\n\nInstallation Canceled."
selectFirst="No Bridge selected. Extensions were not reinstalled. Click on Bridge - Select a Bridge."
secondConection="A second {SAMMIBridge} is trying to connect. Please close one of them."
modified="It seems like the Bridge was modified, cannot locate {missingPart}.\n\nCancelling (un)installation."
extensionUninstalled="Extension {extensionName} was uninstalled successfully.\nRemember to manually delete any deck that was created when you installed the extension."
[channelPointsWindow]
description="Description"
rewardNameEmpty="Reward name can't be empty"
loadFail="Something went wrong, couldn't load Channel Points Rewards."
loading="Loading Channel Points Rewards list."
deleteAlert="Delete this Reward?\r{rewardName}"
title="Title"
setCooldown="Set a Cooldown"
limitUser="Limit per User"
skipQueue="Skip Reward Queue"
dayHourMinuteSeconds="Days      Hours    Minutes  Seconds"
changeRewardID="Change Reward ID in commands"
limitStream="Limit per Stream"
color="Color"
createReward="Create Reward"
owned="Owned"
on="On"
name="Channel Points Rewards"
cost="Cost"
inputRequired="User Input is Required"
rewardMax="Twitch only allows for 50 rewards at a time."
[Triggers]
mod="Mod"
effect="Effect ID"
trigger="Trigger"
allowCommunityGifts="Allow Community Gifts"
noTwitchAccount="No Twitch account found to load Channel Points Rewards from."
tierThree="Tier 3"
maximum="Maximum"
broadcaster="Broadcaster"
sponsor="Member"
voiceID="Voice ID"
updateType="Update Type"
caseSensitive="Case Sensitive"
monthRange="Month Range"
onlyAllow="Only Allow"
key="Key"
normalSub="Normal Sub"
months="Months"
redemptionName="Redemption Name"
verified="Verified"
unknownTrigger="Unknown Trigger"
command="Command"
clickSelect="Loading all the Channel Points Rewards from Twitch, click the Select button to view them."
userInputRequired="User Input Required"
minimum="Minimum"
subGift="Sub Gift"
message="Message"
microPoints="Micro points(10000 per cents)"
username="Username"
tierOne="Tier 1"
allowWildcard="Allow empty Wildcard"
loadFromAPI="Load From Twitch API"
userInput="User Input"
name="Triggers"
anonymousSubGift="Anonymous Sub Gift"
miliseconds="Milliseconds"
tierTwo="Tier 2"
type="Type"
[CommandsWindow]
channelDefault="Channel (default: {twitchAccount})"
else="Else"
off="Off"
commandsDisabled="{commandCount} command(s) disabled."
channelName="Channel Name"
if="If"
extensionFail="{sammiBridge} is not connected or the extension is not properly installed."
insertsNotAllowed="Text (Inserts not allowed)"
userDefault="Login Name (default: {twitchAccount})"
or="Or"
value="Value"
compare="Compare"
commandsHidden="Hiding {commandCount} command(s)."
and="And"
delay="Delay (ms)       Off"
commandsAreDisabled="{commandCount} command(s) are disabled."
fromDefault="From (default: {twitchAccount})"
[mainMenu]
activeButtons="Active Buttons"
variableViewer="Variable Viewer"
youtubeConnection="YouTube Connection"
twitchConnections="Twitch Connections"
obsConnections="OBS Connections"
settings="Settings"
[CommandsLabels]
language="Language"
dur="Dur. (ms)"
defaultYSize="Default Y Size"
arrayObjName="Array/Object Name"
webhook="Webhook URL"
scene="Scene"
rotationAngle="Rotation Angle"
headerObjName="Header Object Name"
month="Month"
stopQueued="Stop Queued"
rewardID="Reward (ID required)"
pollPredictionID="Poll/Prediction ID"
userID="User ID"
fileName="File Name"
max="Max"
press="Press"
buttonID="Button ID"
strToCount="Character/String To Count"
channelID="Channel ID"
monitorType="Monitor Type"
templateStringVar="Template String Variable"
separator="Separator"
sourceType="Source Type"
findValue="Find Value"
xScaleStart="X Scale Start"
filePathFrom="File Path to Copy From"
dateTime="Date/Time"
filePath="File Path"
authToken="Auth Token"
repeatAmount="Repeat Amount"
minimizedWindow="Minimized Window"
accountLoginName="Account Login Name"
points="Points"
top="Top"
arrayTransfer="Array To Transfer"
pollID="Poll ID"
saveAsNum="Save As Number"
cost="Cost"
settingsJson="Settings (JSON)"
delayS="Delay (s)"
block="Block"
from="From"
newObjName="New Object Name"
yStart="Y Start"
varName="Variable Name"
varNumStr="Variable/Number/'String'"
rowAmount="Row Amount"
filterSetting="Filter Setting"
stateChanged="State Changed"
currentYSize="Current Y Size"
saveSoundID="Save Sound ID"
enableDeckIfDisabled="Enable Deck"
message="Message"
cropTop="Crop Top"
yScaleEnd="Y Scale End"
hour="Hour"
insertValue="Value To Insert"
insertPos="Insert Position"
duration="Duration (ms)"
byteSize="Byte Size"
speed="Speed (in percentage)"
format="Format"
charAmount="Amount of Characters"
volumeStart="Volume Start"
liveChatURL="Live Chat URL"
rotationStart="Rotation Start"
displayAs="Display As"
predictionName="Prediction Name"
objName="Object Name"
blendMode="Blend Mode"
varToCheck="Variable To Check"
pollName="Poll Name"
minutes="Minutes"
inFormat="Input Format"
webhookTrigger="Webhook Trigger"
reason="Reason"
messageID="Message ID (empty = clear all chat)"
checkSettings="Check Settings"
sceneName="Scene Name"
defaultWindow="Default Window"
colorCorrection="Color Correction"
includeSelf="Include Self"
bottom="Bottom"
fetchValue="Fetch Value"
ascOrder="Ascending Order"
endR="End R"
values="Values"
level="Level"
screenXPos="Screen X position"
WaitTime="Time"
size="Size"
repeatInterval="Repeat Interval (ms)"
varNum="Variable/Number"
image="Image"
choiceArrayName="Choice Array Name"
status="Status"
column="Column"
transformChanged="Transform changed"
userNameID="User Name or ID"
liveTotalViews="Live Total Views"
predictionID="Prediction ID"
blockedTermId="Term ID (String)"
cropBottom="Crop Bottom"
arrayName="Array Name"
pause="Pause"
second="Second"
mute="Mute"
keyID="Key ID"
description="Description"
volumeEnd="Volume End"
xScale="X Scale"
channelSubscribers="Channel Subscribers"
relative="Relative"
maximizedWindow="Maximized Window"
timeoutAfter="Timeout After (ms)"
pullValue="Pull Value"
volumeLevel="Volume Level"
type="Type"
charPerLine="Characters Per Line"
filePathTo="File Path to Copy to"
visible="Visible"
delayActivation="Delay Activation (ms)"
days="Days"
numbersOnly="Numbers Only"
raidTarget="Raid Target"
enable="Enable"
previousDeck="Previous Deck (no Panel support)"
valueEnd="Value End"
caseInsensitive="Case Insensitive"
alphaEnd="Alpha End"
strArrayJson="String Array/JSON"
transition="Transition"
defaultXSize="Default X Size"
durationSeconds="Duration (s)"
websocket="Websocket URL"
platform="Platform"
allowFloat="Allow Float"
redeemID="Redeem ID"
year="Year"
stopOngoing="Stop Ongoing"
saveIDasVar="Save ID Variable As"
deckID="Select Deck / Enter ID"
saveBanID=""
mean="Mean"
get="Get"
line="Line"
operator="Operator"
liveDislikes="Live Dislikes"
searchFromPos="Search From Position"
payloadJson="JSON Payload"
clientName="Client Name"
soundID="Sound ID"
xScaleEnd="X Scale End"
input="Input"
yScaleStart="Y Scale Start"
startT="Start T"
maxStream="Max/Stream"
yScale="Y Scale"
maxUser="Max/User"
channelPicture="Channel Picture"
skipQueue="Skip Queue"
showWindowUnfocused="Show Window (Unfocused)"
commandId="Command ID"
minCutoff="Min. Cutoff Length"
left="Left"
volume="Volume"
queueable="Queueable"
method="Method"
defaultChoice="Default Choice"
bits="Bits"
years="Years"
boolValue="Boolean Value"
gameCategory="Category"
color="Color"
section="Section"
respectBoolean="Respect Boolean"
smooth="Smooth"
valueStart="Value Start"
amount="Amount (-1 for unlimited)"
time="Time (ms)"
userName="User Name"
stringsDel="Strings to Delete"
alphaStart="Alpha Start"
bufferName="Buffer Name"
currentXSize="Current X Size"
choices="Choice {number}"
activeState="Active State"
formFieldsObject="Form Fields Object"
key="key"
cropLeft="Crop Left"
endL="End L"
day="Day"
newBufferSize="New Buffer Size"
getVariable="Get Variable"
byteCount="Byte Count"
weekDay="Week Day"
min="Min"
allowQueue="Allow Queue"
keys="Keys"
name="Name"
curve="Curve %"
broadcastID="Broadcast ID"
setColor="Set Color"
replacementObjectName="Replacement Object Name"
channelName="Channel Name"
startValue="Start Value"
filterName="Filter Name"
hexStrVar="Hex String Variable"
saveArrayPosAs="Save Array Position As"
triggerDataObject="Trigger Data Object"
seconds="Seconds"
extensionTrigger="Extension Trigger"
displayName="Display Name"
cooldownS="Cooldown (s)"
minimizedWindowUnfocused="Minimized Window (Unfocused)"
strToSearch="String To Search For"
allow="Allow"
right="Right"
withThis="With This"
button="Button"
wildcardNumber="Wildcard Number (first = 0)"
loginName="Login Name"
obsCommandJson="OBS Command (JSON)"
valueWrite="Value to Write"
title="Title"
endT="End T"
tagsArray="Stringified Tag Array"
bodyObjJson="Body Object JSON"
convertionType="Conversion Type"
allowDecimal="Allow Decimal"
buttonInstanceId="Button Instance ID"
columnAmount="Column Amount"
durS="Dur. (s)"
volumePercentage="Volume (in percentage)"
liveViewers="Live Viewers"
category="Category"
term="Term"
cropRight="Crop Right"
endValue="End Value"
maxValueAllowed="Maximum Value Allowed"
minute="Minute"
minValueAllowed="Minimum Value Allowed"
numVar="Number/Variable"
saveVarAsPos="Save Variable As (Position)"
hotkeyName="Hotkey Name"
rotationEnd="Rotation End"
channelVideoCount="Channel Video Count"
yEnd="Y End"
hideWindow="Hide Window"
position="Position"
baseEvents="Base Events"
soundPath="Sound File Path"
insertionSceneName="Insertion Scene Name"
pauseButtonExecution="Pause Button Execution"
hours="Hours"
outFormat="Output Format"
game="Game Name"
messageID_Reply="Message ID (empty = Reply to Trigger)"
comment="Comment"
customPacket="Custom Packet (DEPRECATED)"
parameters="Parameters"
buttonGroupID="Button/Group ID"
arrayDelete="Delete Array"
posStart="Start Position"
replaceThis="Replace This"
command="Command"
screenYPos="Screen Y position"
muted="Muted"
commandName="Command Name"
transitionName="Transition Name"
whisperTarget="Whisper Target"
deletePos="Delete Position"
str="String (text)"
announcement="Announcement"
holdDuration="Hold Duration (ms)"
row="Row"
banID="Ban ID"
resultID="Result ID (resolved only)"
liveLikes="Live Likes"
mouseButton="Mouse Button"
eventName="Event Name"
volumeMeters="Volume Meters"
startB="Start B"
sourceName="Source Name"
startR="Start R"
useDB="Use dB"
strVar="String Variable"
startL="Start L"
saveVarAs="Save Variable As"
channelViews="Channel Views"
newArrayName="New Array Name"
showWindow="Show Window"
enabled="Enabled"
borderSize="Border Size"
rotation="Rotation"
chatMessage="Chat Message"
sum="Sum"
defaultText="Default Text"
replacePos="Replace Position"
months="Months"
unit="Unit"
pullPos="Pull Position"
WaitTimeS="Wait Time (s)"
disable="Disable"
nextDeck="Next Deck (no Panel support)"
xEnd="X End"
text="Text"
getGroupID="Get Group ID"
source="Source"
xStart="X Start"
arguments="Arguments"
endB="End B"
[Menu]
delete="Delete"
transparentButton="Transparent Button"
stretchToSize="Stretch to Size"
done="Done"
random="Random"
remove="Remove"
cancel="Cancel"
saveAndClose="Save and Close"
save="Save"
back="Back"
[TwitchConnections]
linkBotAccount="Link Bot Account"
confirmClose="This window must be open in order to link a Twitch account.\rIf you have already linked your account, you can close it.\rClose?"
scopesNotice="In this screen, you can customise which scopes are included in your Twitch token.\nPlease note: by not using the predefined scopes from the previous screen, we cannot guarantee functionality with all Twitch commands. If you change your scopes and encounter any issues, please state that you are using custom scopes in your crash comment, bug report, or discord post. (This page is not synced with the Streamer Scopes)"
sendMessages="Send Messages As:"
listenEvents="Listen to Twitch Events"
exposedToken="WARNING\nYour access token will be visible in the URL bar after opening this URL in your browser.\n Make sure to not accidentally expose your token on stream!"
subscriberCount="Subscriber Count"
polls="Polls"
copyBotAccountURL="Copy Bot URL"
revokeToken="Revoke Token"
scopesLinkAccount="Link Account"
chat="Chat Notifications"
accountHover="Left Click to Open Token in Browser\nRight Click to Copy Token Link"
copyURL="Copy URL"
joinChannel="Join Channel"
exposedTokenTwo="WARNING\rWhen you open this URL in your browser and allow SAMMI to have access.\rThe access Token will be visible in the URL bar of your browser. If you are Streaming make sure to hide your screen or to not show it if you're recording a video.\rContinue?"
advancedScopes="Advanced Scopes"
tokenRevoked="Twitch account has been removed and token successfully revoked. Link it again to connect it to SAMMI"
linkStreamerAccount="Link Streamer Account"
connectTwitch="Connect to Twitch"
expires="Expires on: "
autoConnect="Auto connect to Twitch"
portInUseCannotLinkAccount="Warning: Port 29521, required for linking Twitch accounts, is currently in use.\r\rIf you plan to link your Twitch account, please close other instances of SAMMI or any applications using this port, then reopen this settings window."
disconnectTwitch="Disconnect Twitch"
joinNotice=""Join chat under this name" denotes which account messages will be sent from"
tokenInvalidOrRevokedAlready="Twitch token is invalid or already revoked. Twitch account removed. Link it again to connect it to SAMMI."
tokenExpired="Your Twitch token has expired. Please renew it in the Twitch Connections tab."
copyStreamerAccountURL="Copy Streamer URL"
expiredToken="Token has expired"
scopesWindow="Twitch Connections - Scopes"
receiveEvents="Receive Events From:"
joinChat="Join chat under this name"
name="Twitch Connections"
followerCount="Follower Count"
edit="Edit Rewards"
[buttonAppearance]
displayText="Label"
lum="Lum."
colorPicker="Color Picker"
borderSize="Border Size"
hex="Hex"
notCopied="Warning: SAMMI failed copying button image to SAMMI/image folder. Please check folder permissions and try again."
sat="Sat."
green="Green"
hue="Hue"
image="Image"
blue="Blue"
name="Button Appearance"
red="Red"
[Youtube]
refreshTokenError="Failed to use refresh token for YouTube."
tokenFailed="Failed to get token for your YouTube account {youtubeName}"
channelInfoFailed="Failed to fetch Channel Info from YouTube."
invalidChatToken="Invalid YouTube chat page token."
statusNotChanged="YouTube Status was not changed."
failedToBan="Failed to ban YouTube user."
streamEnded="YouTube Live stream has ended."
tokenExpired="YouTube token has expired, automatically obtaining a new one."
statusChanged="YouTube Status has been changed."
failedToGetMessage="Failed to retrieve YouTube chat messages: {errorMessage}"
tokenError="Something went wrong while attempting to obtain your YouTube access token."
failedToInsertAdBreak="Failed to insert YouTube Ad Break. Error: {errorMessage}"
unknownChatError="Unknown YouTube chat error: {errorMessage}"
[SourceFilterSettings]
defaultValues="_______________________________\n\nPlease note that default values do not show up in the existing variables list."
null="  :  Null or unknown\n"
actualFilterVariables="Here are the variables currently set for this Filter.\n_______________________________\n\n"
noCurrentFilterSettings="This filter has no current settings\nPlease note that default values do not show up in the existing variables list."
actualSourceVariables="Here are the variables currently set for this Source.\n_______________________________\n\n"
boolean="  :  Boolean\n"
string="  :  String\n"
noCurrentSourceSettings="This source has no current settings\nPlease note that default values do not show up in the existing variables list."
array="  :  Array\n"
object="  :  Object\n"
[CommandCommentTemplates]
inputTemplateName="Please input new template name.\nYou will be able to pick a color afterwards."
deleteTemplate="- Delete Template -"
addTemplate="- Add Template -"
noTemplatesToDelete="No templates to delete."
templateAlreadyExists="The template with the selected name already exists."
templateLimitCharacter="Template names are limited to {amount} characters maximum."
notValidTemplateName="That's not a valid template name."
[InitVariables]
persitentDisabled="Persistent Variables must be enabled in the button settings to use this feature."
jsonExample="JSON is a format to write down\ndata or variables.\n\nYou Can use this feature to have\nvariables already loaded in when the\nbutton is first triggered.\nExample\n\{\n  "variable":1234,\n  "anothervariable":"Some text"\n}"
jsonTooLong="Warning: The JSON input is valid, however it exceeds the maximum length of 5000 characters for accurate boolean parsing.\rIt will be parsed using the standard method without boolean value precision."
jsonEmpty="Your JSON input is empty."
jsonValidate="Validate JSON Syntax"
jsonValid="The JSON input is valid."
invalidFormat="Invalid format. Proper JSON syntax is required."
enablePersistent="Enable Persistent Variables"
name="Init Variables"
jsonFormat="JSON Format"
notGlobalLocal="'Global' and 'local' are reserved words and can't be used as variable names."
reinitialize="Reinitialize Button's Variables"
[ActiveButtons]
ongoing="Ongoing"
all="All"
search="Search"
idGroupTitleTime="ID            Group ID      Title                                     Time"
interruptButtons="Interrupt Buttons"
name="Active Buttons"
unknown="Unknown"
waiting="Waiting"
buttonNoExists="Button no longer exists."
queue="Queues"
[Panel]
connected="{client} Connected."
isMissing="{sammiDeckExe} is missing from the SAMMI Panel  Folder. Please run SAMMI Updater (placed in your SAMMI folder) to download it."
unsupportedConnection="SAMMI Deck and LioranBoard 2 Stream Deck is no longer supported."
disconnected="{client} Disconnected."
[DeckEditor]
buttonOOB="Button is out of bounds."
quitWithoutSaving="Quit without saving any changes?\rCan't be undone."
gridSize="Grid size can't be larger than 50."
encryptDeck="You're trying to Encrypt a deck, please provide the password you entered.\nDISCLAIMER\nThis is not meant to be secure. This is meant to prevent code theft when sharing your deck with others. Do not use a personal password! The password will be hashed and saved in the deck itself. Users that you share your encrypted deck with will NOT be able to: copy the Deck/Protected Commands or view closed comment boxes from any Protected buttons. They will still be able to add, delete or edit commands."
collision="Collision detected. Aborting."
importJson="Import from JSON"
deckProtected="This Deck is protected by its creator."
protectedButton="Protect Button"
buttonOverlapping="Button is overlapping with another button."
backgroundImage="Background Image"
backgroundImageChanged="Background image was changed."
releaseCommands="Release Commands"
quit="Quit without saving changes?\nCan't be undone."
gridSnapping="Grid Snapping"
buttonID="Button ID: {buttonID}"
offButtons="Some buttons might go off the deck."
jsonCopied="Button JSON was copied to clipboard."
copyButton="Copy Button"
lockedCancelled="Locked deck has been canceled."
exportJson="Export JSON"
createButton="Create Button"
pasteButton="Paste Button"
backgroundImageRemove="Are you sure you want to remove the background image from this deck?"
editAppearance="Edit Appearance"
adaptativeResizing="Adaptive Resizing"
enterPassword="Locked deck will be enabled, enter a password."
buttonName="Button Label: {buttonLabel}"
editCommands="Edit Commands"
hotkeyDisabled="Hotkey Triggers are disabled while editing a deck."
smallButtons="Some buttons would become too small."
encryptFail="Incorrect password entered. Encryption was canceled."
encryptSuccess="Deck has been successfully encrypted."
deleteButton="Delete Button"
editSettings="Edit Settings"
saveFailed="SAMMI failed to save the deck file locally. No changes were made to the local files. Try saving again."
groupID="Group ID: {groupID}"
groupIDCopied="Group ID was copied to clipboard. You can change the Group ID in the Button Settings."
editReleaseCommands="Edit Release Commands"
buttonIDCopied="Button ID was copied to clipboard. You can change the Button ID in the Button Settings."
name="Name"
editInit="Edit Init Variables"
buttonCopiedInternally="Button Copied"
editTriggers="Edit Triggers"
[VersionCheck]
updaterNotFound="Could not find SAMMI Updater.exe. Download manually now?"
openUpdater="Open Updater"
getVersionFailed="Failed to retrieve current SAMMI version. (error: {error})"
noNewVersion="You're all up to date!"
newVersionStartUp="New Version Available!\r\rDo you wish to update now?"
newVersion="New Version Available! Do you wish to update now?"
patchNotes="View Patch Notes"
updaterNotFound="Could not find SAMMI Updater.exe. Download manually now?"
openUpdater="Open Updater"
errorParseRetrieveJSON="Error parsing or retrieving update.json"
updaterDownloadFailedDownloadManually="Failed to download SAMMI Updater.exe. Do you wish to download it manually?"
[PatchNotes]
name="Patch Notes"
loading="Loading Patch Notes"
[CSV]
exists="CSV {CSVName} already exists."
invalidColumn="Invalid column {columnName} in {CSVName}"
find="Find"
failedToLoad="Failed to load CSV file."
newColumnName="New Column Name"
duplicateColumn="CSV has duplicate column names. Unable to load."
rowName="Row Name/Number"
columnRowName="Column/Row Name"
variableNeeded="Variable Name is needed {commandName}"
deleted="CSV {CSVName} was unloaded."
invalidRow="Invalid row {rowName} in {CSVName}"
firstBoxValue="First Box Value (Name)"
OOBRow="Out of bounds row in {CSVName}."
changeDuplicateRow="Trying to change a row to a row that already exists."
notExists="CSV {CSVName} does not exist."
rowExists="Row {rowName} already exists in CSV {CSVName}"
columnName="Column Name/Number"
OOBColumn="Out of bounds column in {CSVName}."
sortAsNum="Sort as Numbers"
orientation="Orientation"
firstColumn="First Column (Name)"
defaultValue="Default Value"
noMathInitBox="You are trying to execute a math operation on the initial box of a row. This is not allowed."
ascending="Ascending"
columExists="Column {columnName} already exists in CSV {CSVName}"
name="CSV Name"
invalidFile="Invalid CSV file."
duplicateRow="CSV has duplicate first row names. Unable to load."
[generalAlerts]
pasteOffGrid="Cannot paste the button as it would go off the grid. \nResize the button and paste it?"
noX="No x value."
noTriggersList="Triggers value is not an array list."
updateFailed="Something went wrong trying to get the Update files, try again later."
info="SAMMI Version {version}\nWebsite sammi.solutions"
deleteConfirm="Do you wish to delete this deck?\r\r {deckName} \r\r This cannot be undone."
decktoDisableNotFound="The deck to disable/enable was not found."
noColor="No color value."
noCommandList="No command_list value."
lanIPFail="Failed to get LAN IP. Open Command Prompt, type  "ipconfig" and hit enter, and copy 'IPv4 Address' value instead."
copyKeyWrong="You have entered the wrong key."
keyIsMissing="{key} key is missing from your Deck Data."
languageUpdateFailed="Updating languages failed. Please try again or press YES to manually download them from SAMMI Official repository."
couldNotBePasted="Button could not be pasted. Resize the button you copied first or paste it elsewhere."
noSwitchDeck="No switch_deck value."
deckLoadError="SAMMI could not load your main deck file due to the following errors: {error} \n\n A backup deck file was loaded instead. \n\n {backupCreated} No further action is required."
crashLogSubmitted="Crash log has been successfully submitted to our developer team and copied to your clipboard!"
notProperJSON="This string is not a properly formatted JSON string."
appAuthenticationFailed="Authentication for {app} failed. Check the passwords match and try to connect again."
errorReportCopiedToClipboard="Report has been copied to clipboard."
OBSDataCorrupted="Your OBS Connection Settings from obsinfo.json file was corrupted. SAMMI created default settings instead."
noImage="No image value."
commandFromHigherVersionDetected="SAMMI has detected a command from a higher SAMMI version in button {buttonId} (#{commandPos})"
crashedNotButtonErrorOptedOut="SAMMI crashed. The error was not related to a button, but rather an internal error in SAMMI.\n\nAs you have opted out of analytics and data collection, you can still retrieve your latest error log from error.log file in your SAMMI folder."
copyKeyRequired="You need to provide an encryption key to copy this deck."
httpFailed="Something went wrong completing the HTTP request, save object is missing. The button might have ended before the request was completed."
processDeckAppInputReplyFailed="Something went wrong processing Deck App Input Reply."
TwitchDataCorrupted="Your Twitch Connection Settings from twitch.json file was corrupted. Please link your accounts again."
noY="No y value."
noCommandListList="command_list value is not an array list."
manuallyEdited="This deck was manually edited."
buttonListNotArray="button_list is not an array."
lapIPCopied="LAN IP was copied to clipboard: {ip}"
bridgeDeckServerOpenFailed="SAMMI could not open Bridge server, most likely due to multiple SAMMIs running. Will keep trying."
noOverlappable="No overlappable value."
noReleaseList="No release_list value."
copyIncludeImages="Do you want to include all images with the deck?"
fetchFailed="HTTP request failed or you're not connected to the Internet."
improperFormat="Invalid format detected."
version="Version {SAMMIVersion}"
languageUpdateSuccessful="All languages have been successfully updated. The change will take after restarting SAMMI. Do you wish to do it now?"
pasteCollides="Cannot paste the button as it collides with another button. Resize the button or paste it elsewhere."
noGroupId="No group_id value."
deckCorruptedBackupCreated="'decks_data_corrupted.json' file has been created in your JSON folder to prevent any overrides if you wish to manually repair the original deck file or share it with SAMMI devs."
crashedThreeTimes="SAMMI has crashed 3 times in quick succession.\nAutomatic reopening has been suppressed."
quitWithoutSaving="You're currently editing a deck. Do you wish to close SAMMI without saving any changes?"
minimizedToTray="Minimized to Tray"
YouTubeDataEmpty="youtube.json file that stores your YouTube Connection Settings is empty. Please link your YouTube account again."
noBorder="No border value."
dataWrong="Incorrect deck data detected."
crashedNotButtonError="SAMMI crashed. The error was not related to a button, but rather an internal error in SAMMI.\n\nDo you wish to copy the full error and automatically submit a crash log to SAMMI developers? If you press no, you can still retrieve your latest error log from error.log file in your SAMMI folder."
requestsPending="{Amount} HTTP request(s) pending\nVersion {SAMMIVersion}"
thirdPartyConnected="Third Party {app} connected to SAMMI Core."
notSupportedOnOtherOS="Warning: SAMMI is running in Wine and may have limited functionality. Official support is not provided for non-Windows platforms."
TwitchDataEmpty="twitch.json file that stores your Twitch Connection Settings is empty. Please link your Twitch accounts again."
noWidth="No width value."
noReleaseListList="release_list value is not an array list."
typeToSearch="Type to Search"
deckSaved="Deck has been saved."
jsonCopied="Deck's JSON has been copied to clipboard."
apiServerOpenFailed="SAMMI could not open local API server, most likely due to multiple SAMMIs running. Will keep trying."
noPersistent="No persistent value."
noFunctions="No functions value."
displayMore="More"
dataMissing="Failed to import the selected deck. The following data is missing: {key}"
invalidCommands="Button {buttonName} has invalid commands, delete it and recreate your button."
ProgramFilesLocation="Your SAMMI was detected in program files or another system location.\nYou must move SAMMI to a different location, or you may experience crashes."
noText="No text value."
noTriggers="No triggers value."
allReset="All button variables, CSVs, Buffers, and Active or Queued Buttons have been cleared."
addACommentError="Please add a short comment describing steps to recreate the crash, which further helps us troubleshoot it."
alreadyRunning="SAMMI is still running.\rStart anyway?"
emailScopeMissing="You have a Twitch: Get User Info command but haven't got the email scope set.\n\nHead to Twitch Connections and Edit the Scopes to include View Email Address."
YouTubeDataCorrupted="Your YouTube Connection Settings from youtube.json file was corrupted. Please link your YouTube account again."
noPressType="No press_type value."
deckLoadErrorAll="SAMMI was unable to load your decks due to the following error: {error} \n\n {backupCreated} \n If this is your first time running SAMMI, this is a normal behavior, please press Ok. \n\n If this is not your first time, your decks might be corrupted. Continue with empty decks?"
crashedButtonError="SAMMI crashed. The error indicates there was a problem with a button. Do you wish to copy the full error to your clipboard? If you press no, you can still retrieve your latest error log from error.log file in your SAMMI folder."
noTLS="Error fetching data.\n\nTLS options might be disabled. Enable it by navigating to Windows \n\nControl Panel>Internet Options>Advanced and check Use TLS 1.0/1.1/1.2"
thirdPartyDisconnected="Third Party {app} disconnected from SAMMI Core."
wrongRetrievePatronList="Something went wrong retrieving Patron list."
OBSDataEmpty="obsinfo.json file that stores your OBS Connection Settings is empty. SAMMI created default settings instead."
noHeight="No height value."
incorrectButtonCommandDetected="SAMMI has detected and deleted an invalid command in button {buttonId} (#{commandPos})"
alreadyExists="This deck already exists under the name {deckName}.\r\rDo you wish to replace it? This can't be undone."
triggersResumed="Repeat Interval and SAMMI Startup triggers have been resumed."
ArraysObjectsBuffer="Arrays: {arrays}    Objects: {objects}    Buffer: {buffer}"
panelServerOpenFailed="SAMMI could not open Deck App server, most likely due to multiple SAMMIs running. Will keep trying."
[sideMenu]
reloadBridge="Reload a Bridge"
downloadExtensions="-- Download Extensions --"
DEVExtensions="{devName}'s Extensions"
integrations="Integrations"
installExtension="Install an Extension"
moveLeft="Move Left"
copyFullPath="Copy Full Path"
pingBridge="Send ping to a Bridge"
deleteDeck="Delete Deck"
moveRight="Move Right"
reinstallAllExtensions="Reinstall all Extensions"
revealExplorer="Reveal in File Explorer"
openPanelWeb="Open SAMMI Panel (Web)"
addNewDeck="Add New Deck"
about="About"
copyDeckID="Copy ID"
getLanIp="Get LAN IP (for other devices)"
installExtensionFolder="Install all Extensions from folder"
editDeck="Edit Deck"
disable="Disable"
openDeckHopper="Open Deck Hopper (Recommended!)"
duplicate="Duplicate"
openInBrowser="Open in a Browser"
pasteDeck="Paste Deck"
selectBridge="Select a Bridge"
installExtensions="-- Install Extensions --"
bridge="Bridge"
getDeckHopperAndroid="Get Deck Hopper for Android"
copyDeck="Copy Deck"
officialExtensions="Official Extension Site"
uninstallExtension="Uninstall an Extension"
[YouTubeConnection]
videos="Videos"
token="Obtain a Token"
link="Link"
supportChristinna="Please consider Supporting Christinna if you use this feature."
views="Views"
additionalInfo="To get started you need to obtain a "Refresh Token"\nPress the button on the right to obtain and authenticate SAMMI for Youtube.\n\nAfter that put the refresh token you got from our website in the box below and press the "Link" button.\nIf everything has gone correctly your information should appear on top of this Window!"
enterRefreshToken="Enter your Refresh Token here and click Link to link your YouTube account."
subscribers="Subscribers"
liveStats="Viewers  {liveViewers}\nViews  {liveTotalViews}\nLikes  {liveLikes}\nDislikes  {live_dislikes}"
refreshToken="Refresh Token"
banIdSaved="Attempting to ban user. Ban ID will be saved in latest_youtube_ban variable."
name="YouTube Connection"
forget="Forget"
serverRequired="This service requires a server to work, which\nChristinna is providing to SAMMI users for free"
[connectionInfo]
twitchEventsub="Twitch Eventsub"
twitchChat="Twitch Chat"
mainOBS="Main OBS"
bridge="Bridge"
[Voice]
msgCloseConfirmation="Do you really want to close SAMMI Voice?"
statusActive="Active"
optionConfidence="Confidence Level"
ttPW="The SAMMI API password.\nBy default it is empty."
isMissing="{sammiVoiceExe} is missing from the SAMMI Voice Folder. Please use the SAMMI Updater to download SAMMI Voice."
notifyConnecting="SAMMI Voice (Connecting)"
errorPWNotMatching="Passwords don't match.\n\nPlease make sure that your password in SAMMI Voice matches the password in SAMMI Core's Local API Settings."
ttConfidenceLevel="Indicates the minimum level of confidence in the accuracy\nof the recognized speech for the event to be triggered."
pw="PW"
connected="SAMMI Voice Connected."
optionAutoImport="Auto import Voice Triggers"
ttSettings="Change your SAMMI Voice settings here."
startConnecting="Connecting..."
errorOccured="Error occured"
ttAutoImport="Automatically import all voice triggers from SAMMI's non-encrypted decks when SAMMI Voice starts.\nTriggers with wildcards (*) will be ignored."
notifyHelp="Help"
errorWildcards="SAMMI Voice is not able to use wildcards (*) in triggers.\nPlease adjust the following lines:\n\n"
msgCloseConfirmationTitle="Close?"
connection="Connection"
statusConnecting="Connecting"
triggers="Triggers"
optionClosingConfirmation="Show Closing Confirmation"
status="Status"
ttPort="The SAMMI API port.\nBy default it is 9450."
notifyInactive="SAMMI Voice (Inactive)"
errorAlreadyRunning="Can not start SAMMI Voice. Another instance of SAMMI Voice is already running."
ttCloseConfirmation="Check this box if you want a confirmation message\nbefore SAMMI Voice is closed."
ip="IPv4"
optionListenStartup="Listen on Startup"
ttConnection="Change your SAMMI connection settings\nhere if you modified them in SAMMI."
msgNoTriggers="No Triggers found.\nPlease fill out at least 1 trigger first."
startListening="Start Listening"
optionRecognitionLog="Create Recognition Logfile"
ttListenStartup="Check this box to automatically listen to\nthe triggers whenever you start up SAMMI Voice."
notifyActive="SAMMI Voice (Active)"
errorNoConnection="Could not connect to the SAMMI API server.\n\nPlease make sure that your IP address and Port match those in  SAMMI Core's Local API Settings and that the API server is enabled."
ttRecognitionLog="Check this box if you want to enable the recognition logfile\nwhich displays the recognized results and their accuracy."
port="Port"
statusInactive="Inactive"
optionMinimizeSysTray="Minimize only to System Tray"
ttIP="The IP of the PC were SAMMI Core is open.\nBy default it is 127.0.0.1."
stopListening="Stop Listening"
errorConnectionLost="SAMMI Voice couldn't communicate with SAMMI.\nSAMMI Voice will stop listening."
ttMinimize="Check this box if you want SAMMI Voice to go only\ninto the System Tray when being minimized."
settings="Settings"
notifyExit="Exit"
ttTriggers="Add one trigger per line in the list."
